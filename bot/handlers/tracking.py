# # handlers/tracking.py
# from telegram import Update
# from telegram.ext import ContextTypes, MessageHandler, filters
# from bot.database.storage import update_user_activity, add_pushups
# import re
#
# # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫—Ä—É–∂–∫–æ–≤
# CIRCLE_PATTERN = re.compile(r'[‚óã‚ö™‚≠ïüîµüîò‚óØ„Äá‚ö¨üîÑüí™]')
#
#
# async def track_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     """–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫—Ä—É–∂–∫–æ–≤"""
#     if not update.message or not update.message.text:
#         return
#
#     user = update.effective_user
#     chat = update.effective_chat
#     topic_id = update.message.message_thread_id
#
#     # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     await update_user_activity(
#         user_id=user.id,
#         username=user.username,
#         first_name=user.first_name,
#         last_name=user.last_name,
#         group_id=str(chat.id) if chat.type in ['group', 'supergroup'] else None,
#         group_name=chat.title if chat.type in ['group', 'supergroup'] else None,
#         topic_id=topic_id,
#     )
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä—É–∂–∫–∏ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö
#     if chat.type in ['group', 'supergroup']:
#         circles = CIRCLE_PATTERN.findall(update.message.text)
#         if circles:
#             try:
#                 today_count, actual_count, weight = await add_pushups(
#                     user.id,
#                     str(chat.id),
#                     len(circles),
#                     chat.title
#                 )
#
#                 # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –∫—Ä—É–∂–∫–∏
#                 if len(circles) > 0:
#                     await update.message.reply_text(
#                         f"‚úÖ +{actual_count} –æ—Ç–∂–∏–º–∞–Ω–∏–π! "
#                         f"(√ó{weight} –∑–∞ {len(circles)} –∫—Ä—É–∂–∫–æ–≤)\n"
#                         f"–°–µ–≥–æ–¥–Ω—è: {today_count} –æ—Ç–∂–∏–º–∞–Ω–∏–π"
#                     )
#
#             except Exception as e:
#                 print(f"Error processing circles: {e}")
#
#
# def setup_tracking_handlers(application):
#     """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
#     application.add_handler(MessageHandler(
#         filters.TEXT & ~filters.COMMAND,
#         track_message
#     ))