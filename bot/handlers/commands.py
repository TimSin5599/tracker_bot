from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler
from bot.database.storage import get_active_users_stats, get_online_users


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [
        [InlineKeyboardButton("‚úÖ –°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ", callback_data="consent_yes")],
        [InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data="consent_no")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–∂–∏–º–∞–Ω–∏–π!\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º:\n"
        "‚Ä¢ –°—á–∏—Ç–∞—Ç—å –æ—Ç–∂–∏–º–∞–Ω–∏—è –ø–æ –∫—Ä—É–∂–æ—á–∫–∞–º ‚óã\n"
        "‚Ä¢ –í–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ üìä\n"
        "‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö ‚è∞\n"
        "‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º üèÜ\n\n"
        "–î–ª—è —Ä–∞–±–æ—Ç—ã –º–Ω–µ –Ω—É–∂–Ω–æ –≤–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:",
        reply_markup=reply_markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
    üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
    /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
    /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    /online - –ö—Ç–æ —Å–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω
    """
    await update.message.reply_text(help_text)


async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    stats = await get_active_users_stats()

    if not stats:
        await update.message.reply_text("üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        return

    response = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:\n\n"
    for user in stats:
        last_seen = user['last_activity'].strftime("%d.%m.%Y %H:%M") if user['last_activity'] else "–Ω–∏–∫–æ–≥–¥–∞"
        response += f"üë§ {user['username'] or user['first_name']}:\n"
        response += f"   üì® –°–æ–æ–±—â–µ–Ω–∏–π: {user['message_count']}\n"
        response += f"   ‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {last_seen}\n\n"

    await update.message.reply_text(response)


async def online_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /online - –∫—Ç–æ —Å–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω"""
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∏–Ω—É—Ç —Å—á–∏—Ç–∞—é—Ç—Å—è –æ–Ω–ª–∞–π–Ω
    online_users = await get_online_users(minutes=5)

    if not online_users:
        await update.message.reply_text("‚ùå –°–µ–π—á–∞—Å –Ω–∏–∫—Ç–æ –Ω–µ –æ–Ω–ª–∞–π–Ω")
        return

    response = "‚úÖ –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω:\n\n"
    for user in online_users:
        response += f"‚Ä¢ {user['username'] or user['first_name']}\n"

    await update.message.reply_text(response)


def setup_command_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(CommandHandler("online", online_command))

async def pushups_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /pushups - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç–∂–∏–º–∞–Ω–∏–π"""
    from bot.database.storage import get_pushup_stats

    stats = await get_pushup_stats()

    if not stats:
        await update.message.reply_text("üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Ç–∂–∏–º–∞–Ω–∏—è—Ö")
        return

    response = "üèÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∂–∏–º–∞–Ω–∏–π:\n\n"
    for i, user in enumerate(stats, 1):
        last_date = user['last_date'].strftime("%d.%m.%Y") if user['last_date'] else "–Ω–∏–∫–æ–≥–¥–∞"
        response += f"{i}. {user['username']}:\n"
        response += f"   üìÖ –°–µ–≥–æ–¥–Ω—è: {user['today']}\n"
        response += f"   üèãÔ∏è –í—Å–µ–≥–æ: {user['total']}\n"
        response += f"   ‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ: {last_date}\n\n"

    await update.message.reply_text(response)


def setup_command_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(CommandHandler("online", online_command))
    application.add_handler(CommandHandler("pushups", pushups_command))


async def test_circle_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä—É–∂–∫–æ–≤"""
    test_message = """
    –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–∏ –∫—Ä—É–∂–æ—á–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞:
    ‚óã ‚ö™ ‚≠ï üîµ üîò ‚óØ „Äá ‚ö¨ üîÑ üí™

    –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∫–∞–∂–¥—ã–π –∫—Ä—É–∂–æ—á–µ–∫!
    """
    await update.message.reply_text(test_message)