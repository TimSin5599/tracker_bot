import os
from datetime import time
from telegram.ext import ContextTypes
from bot.database.storage import get_users_without_pushups_today
from config.settings import settings
import pytz

MOSCOW_TZ = pytz.timezone("Europe/Moscow")


async def send_reminders(context, chat_id: int):
    users = await get_users_without_pushups_today()

    chat_members_ids = set()
    admins = await context.bot.get_chat_administrators(chat_id)
    chat_members_ids.update(admin.user.id for admin in admins)

    for user in users:
        if user['user_id'] in chat_members_ids:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ —á–∞—Ç–µ ‚Äî –Ω–µ –ø–∏—à–µ–º –≤ –ª–∏—á–∫—É
            continue
        try:
            await context.bot.send_message(
                chat_id=user['user_id'],
                text="‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –î–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å 2 —á–∞—Å–∞..."
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user['user_id']}: {e}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ —á–∞—Ç
    report_text = "üìä –û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å:\n"
    report_text += "\n".join([u['username'] or u['first_name'] for u in users if u['user_id'] in chat_members_ids])
    await context.bot.send_message(chat_id=chat_id, text=report_text)



async def send_daily_report(context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ 00:00 –æ —Ç–µ—Ö, –∫—Ç–æ –Ω–µ —Å–¥–µ–ª–∞–ª –æ—Ç–∂–∏–º–∞–Ω–∏—è"""
    users_without_pushups = await get_users_without_pushups_today()

    if users_without_pushups:
        report_text = "üìä –û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å:\n\n"
        report_text += "‚ùå –ù–µ —Å–¥–µ–ª–∞–ª–∏ –æ—Ç–∂–∏–º–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è:\n"

        for user in users_without_pushups:
            report_text += f"‚Ä¢ {user['username'] or user['first_name']}\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∞–º
        for admin_id in settings.ADMIN_IDS:
            print("ADMIN_IDS:", settings.ADMIN_IDS, type(settings.ADMIN_IDS))
            try:
                await context.bot.send_message(chat_id=admin_id, text=report_text)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω—É {admin_id}: {e}")

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–Ω–µ–≤–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏
    from bot.database.storage import reset_daily_pushups
    await reset_daily_pushups()


def setup_reminders(application):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞ –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è (22:00)
    application.job_queue.run_daily(
        send_reminders,
        time(hour=14, minute=2, tzinfo=MOSCOW_TZ),  # 22:00
        name="daily_reminders"
    )

    # –û—Ç—á–µ—Ç –≤ –ø–æ–ª–Ω–æ—á—å (00:00)
    application.job_queue.run_daily(
        send_daily_report,
        time(hour=0, minute=0, tzinfo=MOSCOW_TZ),  # 00:00
        name="daily_report"
    )